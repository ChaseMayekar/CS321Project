////////////////////////
//Boardmanager acts like a repository, it keeps track of information while other programs are workhorses.

using UnityEngine.SceneManagement;
public int sceneName = 0;//This should let us change it in the Unity Browser.
public bool goalRed = false;//public only to mess with it in scene editor.
public bool goalBlue = false;//Can be changed to private later if need be.
public bool goalGreen = false;

//Setters for the stats. Other scripts should be able to access these to change values at any time.
public setGoalRed(bool x)
{goalRed = x;}
public setGoalBlue(bool x)
{goalBlue = x;}
public setGoalGreen(bool x)
{goalGreen = x;}

	
if(Input.GetKeyDown("r")//Reset Button.
	Application.LoadLevel(sceneName);
	//Basically, since our scenes are premade, we can simply and easily tell unity to load the level again.
	//This stuff works as long as the scenes are registered as levels in the build. We will need to do this anyway in order to switch levels.
	//https://docs.unity3d.com/ScriptReference/Application.LoadLevel.html
	
	
if(Input.getKeyDown("p")//Pause menu?
{
	//Display the pause menu, or the controls, or something. Optional.
}
	
if(goalRed == true && goalBlue == true & goalGreen == true)
{
	//Do the win menu. (GUI) Get from Chase.
	Application.LoadLevel(sceneName+1);
	//For now, we'll just flatly load the next level.
}
